name: SDLC Full Pipeline

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  security-events: write  # Necesario para CodeQL

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Dummy Unit Tests
      run: echo "Running unit tests..." && exit 0

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Integration Test
      run: echo "Running integration tests..." && exit 0

#  sast:
#    runs-on: ubuntu-latest
#    needs: unit-tests
#    steps:
#    - name: Checkout repository
#      uses: actions/checkout@v3

  sast:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Inicializar CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'python'

      - name: Análisis estático con CodeQL
        uses: github/codeql-action/analyze@v3

      - name: Instalar dependencias para ShellCheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck python3 python3-pip
          pip3 install pandas matplotlib jinja2

      - name: Ejecutar ShellCheck y generar salida JSON
        run: |
          shellcheck -f json $(find . -type f -name "*.sh") > shellcheck_result.json || true

      - name: Convertir JSON de ShellCheck a SARIF
        run: |
          python3 ./scripts/convert_to_sarif.py shellcheck_result.json shellcheck.sarif

      - name: Subir SARIF de CodeQL
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results/codeql.sarif

      - name: Subir SARIF de ShellCheck
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: shellcheck.sarif

  dast:
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
    - name: OWASP ZAP Baseline Scan
      uses: zaproxy/action-baseline@v0.7.0
      with:
        target: 'http://localhost:8069'
      continue-on-error: true

  qa:
    runs-on: ubuntu-latest
    needs: [integration-tests, sast, dast]
    steps:
    - name: Manual QA Placeholder
      run: echo "QA team validates the build manually or via automated UI scripts."

  uat:
    runs-on: ubuntu-latest
    needs: qa
    steps:
    - name: UAT Acceptance Placeholder
      run: echo "Stakeholders test and approve features."

  deploy-production:
    runs-on: ubuntu-latest
    needs: uat
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Deploy to Production
      run: echo "Production deployment successful!"
